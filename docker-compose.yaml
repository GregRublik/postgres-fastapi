services:

  app:
    build:
      .
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${APP_PORT}:${APP_PORT}
    networks:
      - mynetwork

  postgres:
    image: postgres:latest
    container_name: ${DB_NAME}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 2s
      timeout: 2s
      retries: 10
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rm_user
      - RABBITMQ_DEFAULT_PASS=rm_password
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres-data:
